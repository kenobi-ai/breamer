{
  "version": 3,
  "sources": ["../../../src/workers-entry.ts"],
  "sourceRoot": "/Users/rorz/kenobi/breamer/.wrangler/tmp/deploy-Glia9w",
  "sourcesContent": ["// Cloudflare Workers entry point for container-based deployment\nimport { DurableObject } from 'cloudflare:workers';\n\nexport default {\n  async fetch(request: Request, env: any, ctx: any): Promise<Response> {\n    // Get or create a Durable Object instance for the container\n    const id = env.BREAMER_CONTAINER.idFromName('main');\n    const obj = env.BREAMER_CONTAINER.get(id);\n    \n    // Forward the request to the container\n    return await obj.fetch(request);\n  },\n};\n\n// Container class as a Durable Object\nexport class BreamerContainer extends DurableObject {\n  async fetch(request: Request): Promise<Response> {\n    // The containerized Express server runs on port 8080\n    // Forward all requests to it\n    const url = new URL(request.url);\n    url.hostname = 'localhost';\n    url.port = '8080';\n    \n    try {\n      const response = await fetch(url, {\n        method: request.method,\n        headers: request.headers,\n        body: request.body,\n        duplex: 'half'\n      } as RequestInit);\n      \n      return response;\n    } catch (error) {\n      console.error('Container request failed:', error);\n      return new Response('Container service unavailable', { status: 503 });\n    }\n  }\n}"],
  "mappings": ";;;;AACA,SAAS,qBAAqB;AAE9B,IAAO,wBAAQ;AAAA,EACb,MAAM,MAAM,SAAkB,KAAU,KAA6B;AAEnE,UAAM,KAAK,IAAI,kBAAkB,WAAW,MAAM;AAClD,UAAM,MAAM,IAAI,kBAAkB,IAAI,EAAE;AAGxC,WAAO,MAAM,IAAI,MAAM,OAAO;AAAA,EAChC;AACF;AAGO,IAAM,mBAAN,cAA+B,cAAc;AAAA,EAfpD,OAeoD;AAAA;AAAA;AAAA,EAClD,MAAM,MAAM,SAAqC;AAG/C,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAI,WAAW;AACf,QAAI,OAAO;AAEX,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,KAAK;AAAA,QAChC,QAAQ,QAAQ;AAAA,QAChB,SAAS,QAAQ;AAAA,QACjB,MAAM,QAAQ;AAAA,QACd,QAAQ;AAAA,MACV,CAAgB;AAEhB,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO,IAAI,SAAS,iCAAiC,EAAE,QAAQ,IAAI,CAAC;AAAA,IACtE;AAAA,EACF;AACF;",
  "names": []
}
